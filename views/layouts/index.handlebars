<button data-target="modal1" class="modal-trigger btn black"><i class="material-icons">add</i> </button>

<div class="container" id="legend">
    Categories <br/> <hr>
    Food : <img src="http://maps.google.com/mapfiles/ms/icons/green-dot.png"/> <br/>
    Attraction : <img src="http://maps.google.com/mapfiles/ms/icons/blue-dot.png"/> <br/>
    Activity : <img src="http://maps.google.com/mapfiles/ms/icons/yellow-dot.png"/> <br/>
</div>
        
<div id="modal1" class="modal">
    <div class="modal-content">
        <div class="row">
            <div class="input-field col s12">
                <input id="name" type="text" class="validate">
                <label for="name">Name</label>
            </div>
            <div class="input-field col s12">
                <input id="category" type="text" class="validate">
                <label for="category">Category</label>
            </div>
            <div class="input-field col s12">
                <input id="googleMapsLink" type="text" class="validate">
                <label for="googleMapsLink">Google Maps Link</label>
            </div>
            <button class="btn black" id="submitPlace">Submit</button>
        </div>
    </div>
</div>

<!-- Map instantiation -->
<div style="width: 100%; height: 100%;">
    <div id="map"></div>
</div>

<script>
    /* Map elements. */
    var map;
    function initMap() {
        const markerArray = [];

        map = new google.maps.Map(document.getElementById('map'), {
            center: {lat: 36.2048, lng: 138.2529},
            zoom: 7
        });

        const options = {
            gridSize: 15,
            imagePath: './extras/m'
        }

        var mc = new MarkerClusterer(map, markerArray, options);

        var styledArray = [
            {
                featureType: "all",
                elementType: "labels",
                stylers: [
                { visibility: "off" }
                ]
            }
        ];
        map.set('styles', styledArray);

        mc.addMarker(new google.maps.Marker({
            position: {lat: 35.771991, lng: 140.3906614},
            map: map,
            label: {
                textShadow: '0px 0px #000',
                color: 'black',
                fontWeight: 'bold',
                fontSize: '15px',
                text: "NARITA AIRPORT"
            }
        }));

        /* Add current location onto the map. */
        if (navigator.geolocation) {
            navigator.geolocation.getCurrentPosition(function(position) {
                var pos = {
                    lat: position.coords.latitude,
                    lng: position.coords.longitude
                };

                mc.addMarker(new google.maps.Marker({
                    position: {lat: pos.lat, lng: pos.lng},
                    map: map,
                    label: 'ME'
                }));
            });
        }

        /* Retrieve values from database and add markers to the page. */
        firebase.database().ref('places').once('value', function(snapshot){
            snapshot.forEach(function(childSnapshot){
                if (childSnapshot.val().name !== undefined || childSnapshot.val().category !== undefined || childSnapshot.val().latitude !== undefined || childSnapshot.val().longitude !== undefined) {
                    mc.addMarker(new google.maps.Marker({
                        position: {lat: parseFloat(childSnapshot.val().latitude), lng: parseFloat(childSnapshot.val().longitude)},
                        map: map,
                        icon: grabIcon((childSnapshot.val().category).toLowerCase()),
                        label: {
                            color: 'black',
                            fontWeight: 'bold',
                            fontSize: '15px',
                            text: childSnapshot.val().name.toUpperCase()
                        }
                    }));
                }
            })
        })
    }

    function grabIcon (category) {
        switch (category) {
            case 'food':
                return 'http://maps.google.com/mapfiles/ms/icons/green-dot.png';
            case 'attraction':
                return 'http://maps.google.com/mapfiles/ms/icons/blue-dot.png';
            case 'activity':
                return 'http://maps.google.com/mapfiles/ms/icons/yellow-dot.png';
        }
    }
</script>
<script async defer src='{{config.googleMapsAPIKEY}}'></script>